# In order to keep distribution-specific sensible default Bash configuration,
# user's configuration extends default `.bashrc`.
# Add `source ${HOME}/.bashrc.local` to default `.bashrc` to activate.

# COLOR CODES
# ===========

RESET="\[\033[0;0m\]"
BOLD="\[\033[0;1m\]"
UNDERLINE="\[\033[0;4m\]"
# Foregrounds
GREY="\[\033[0;30m\]"
RED="\[\033[0;31m\]"
GREEN="\[\033[0;32m\]"
YELLOW="\[\033[0;33m\]"
BLUE="\[\033[0;34m\]"
MAGENTA="\[\033[0;35m\]"
CYAN="\[\033[0;36m\]"
WHITE="\[\033[0;37m\]"
# Backgrounds
ONGREY="\[\033[0;40m\]"
ONRED="\[\033[0;41m\]"
ONGREEN="\[\033[0;42m\]"
ONYELLOW="\[\033[0;43m\]"
ONBLUE="\[\033[0;44m\]"
ONMAGENTA="\[\033[0;45m\]"
ONCYAN="\[\033[0;46m\]"
ONWHITE="\[\033[0;47m\]"


# CONFIGURATION VARIABLES
# =======================

stty -ixon  # Enable backward history search with C-s.
shopt -s autocd  # Auto append cd to directory

HISTTIMEFORMAT="%d.%m.%y %T "  # Store date and time in Bash history.
HISTSIZE=10000
HISTFILESIZE=10000
HISTCONTROL=ignoreboth:erasedups  # Remove duplicates from Bash history.


# ENVIRONMENT VARIABLES
# =====================

export EDITOR="vim"

# Syntax highlighting for `less`. Requires `source-highlight` package.
export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
export LESS=" -R "

# Force tmux into 256 colors mode.
export TERM=xterm-256color

# Tell Java that XMonad is non-reparenting WM.
# Needed for correct Java apps windows operation under XMonad.
export _JAVA_AWT_WM_NONREPARENTING=1

# Set styles for Java application.
export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=lcd \
    -Dswing.aatext=true \
    -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel \
    -Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel"

eval $(dircolors ${HOME}/.dircolors/dircolors.ansi-universal)

# Enable Pew shell completion.
PEW_SHELL_CONFIG='/usr/lib/python3.6/site-packages/pew/shell_config/init.bash'
if [ -f ${PEW_SHELL_CONFIG} ]; then
    source ${PEW_SHELL_CONFIG}
fi


# PROMPT
# ======

# Source git prompt
source /usr/share/git/completion/git-prompt.sh

prompt_command () {
    # Capture exit code of last command.
    if [ $? -eq 0 ]; then
        STATUS=""
    else
        STATUS="${RED}${?}${RESET}:"
    fi

    # Show Git branch if in repository.
    if [ "$(type -t __git_ps1)" ]; then
        BRANCH="$(__git_ps1)"
    fi

    # Show virtualenv if activated.
    if [[ $VIRTUAL_ENV != "" ]]; then
        VENV="${CYAN}[${VIRTUAL_ENV##*/}]${RESET} "
    else
        VENV=""
    fi

    export PS1="${RED}${debian_chroot:+($debian_chroot)}${RESET}\
$VENV\
${YELLOW}\u${RESET}@${GREEN}\h${RESET}:\
$STATUS\
${BLUE}\W${RESET}\
${RED}${BRANCH}${RESET}\
${GREEN}\$${RESET} "
}

export PROMPT_COMMAND=prompt_command


# ALIASES
# =======

alias ..='cd ../'
alias dud='du -hd1'
alias l='ls -hl --color'
alias ll='ls -Ahl --color'
alias grep='grep --color=auto'
alias rgrep='grep -r --color=auto'
alias ssh='TERM=xterm ssh'
alias open='xdg-open'
alias ssh='TERM=xterm ssh'
alias pyclean="find . \( -name \*.pyc -o -name \*.pyo -o -name __pycache__ \) -delete"
alias packer="packer-io"

# Create popup notification when command execution is completed.
# Usage:
#   ~$ command; alert
alias alert='notify-send --urgency=low -i \
    "$([ $? = 0 ] && echo terminal || echo error)" \
    "$(history | tail -n1 | sed -e \
    '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"; printf "\a"'
