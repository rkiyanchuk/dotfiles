# In order to keep distribution-specific sensible default Bash configuration,
# user's configuration extends default `.bashrc`.
# Add `source ${HOME}/.bashrc.local` to default `.bashrc` to activate.

# COLOR CODES
# ===========

RESET="\[\033[0;0m\]"
BOLD="\[\033[0;1m\]"
UNDERLINE="\[\033[0;4m\]"
# Foregrounds
GREY="\[\033[0;30m\]"
RED="\[\033[0;31m\]"
GREEN="\[\033[0;32m\]"
YELLOW="\[\033[0;33m\]"
BLUE="\[\033[0;34m\]"
MAGENTA="\[\033[0;35m\]"
CYAN="\[\033[0;36m\]"
WHITE="\[\033[0;37m\]"
# Backgrounds
ONGREY="\[\033[0;40m\]"
ONRED="\[\033[0;41m\]"
ONGREEN="\[\033[0;42m\]"
ONYELLOW="\[\033[0;43m\]"
ONBLUE="\[\033[0;44m\]"
ONMAGENTA="\[\033[0;45m\]"
ONCYAN="\[\033[0;46m\]"
ONWHITE="\[\033[0;47m\]"

MACOS='darwin17'
LINUX='linux-gnu'

HISTTIMEFORMAT="%d.%m.%y %T "  # Store date and time in Bash history.
HISTSIZE=10000
HISTFILESIZE=10000
HISTCONTROL=ignoreboth:erasedups  # Remove duplicates from Bash history.

stty -ixon  # Enable backward history search with C-s.

if [[ $OSTYPE == $LINUX ]]; then
    shopt -s autocd  # Auto append cd to directory
    eval $(dircolors ${HOME}/.dircolors/dircolors.ansi-universal)
    USER_PATHS="${HOME}/.local/bin:${HOME}/go/bin:${HOME}/node_modules/.bin"

elif [[ $OSTYPE == $MACOS ]]; then
    export CLICOLOR=1

    BREW='/usr/local'
    if [ -f ${BREW}/etc/bash_completion ]; then
        source ${BREW}/etc/bash_completion
    fi

    GIT_COMPLETION="/Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash"
    GIT_PROMPT="/Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh"
    USER_PATHS="${HOME}/.local/bin:${HOME}/go/bin:${HOME}/node_modules/.bin:${HOME}/Library/Python/3.6/bin"

    if [ -f ${GIT_COMPLETION} ]; then
        source ${GIT_COMPLETION}
    fi

    if [ -f ${GIT_PROMPT} ]; then
        source ${GIT_PROMPT}
    fi


fi

# ENVIRONMENT VARIABLES
# =====================

export EDITOR="vim"

# Add user binaries to PATH.
export PATH="${USER_PATHS}:$PATH"

export GPG_TTY=`tty`

# Enable Pew shell completion.
PEW_SHELL_CONFIG='/usr/lib/python3.6/site-packages/pew/shell_config/init.bash'
if [ -f ${PEW_SHELL_CONFIG} ]; then
    source ${PEW_SHELL_CONFIG}
fi



# PROMPT
# ======

# Self-made replacement for slow __git_ps1.
function __git_branch() {
    local head
    local branch
    git_root=$(pwd)
    while [[ "$git_root" != "" && ! -e "$git_root/.git" ]]; do
        git_root="${git_root%/*}"
    done

    if [[ -d "$git_root/.git" ]]; then
        head=$(<"$git_root/.git/HEAD")
        branch=" (${head##*/})"
    else
        branch=""
    fi

    echo "$branch"
}


prompt_command () {
    # Capture exit code of last command.
    if [ $? -eq 0 ]; then
        STATUS=""
    else
        STATUS="${RED}${?}${RESET}:"
    fi

    BRANCH=$(__git_branch)

    # Show virtualenv if activated.
    if [[ $VIRTUAL_ENV != "" ]]; then
        VENV="${CYAN}[${VIRTUAL_ENV##*/}]${RESET} "
    else
        VENV=""
    fi

    export PS1="${RED}${debian_chroot:+($debian_chroot)}${RESET}\
$VENV\
${YELLOW}\u${RESET}@${GREEN}\h${RESET}:\
$STATUS\
${BLUE}\W${RESET}\
${RED}${BRANCH}${RESET}\
${GREEN}\$${RESET} "
}

export PROMPT_COMMAND=prompt_command


# ALIASES
# =======

alias ..='cd ../'
alias dud='du -hd1'
alias pyclean="find . \( -name \*.pyc -o -name \*.pyo -o -name __pycache__ \) -delete"
alias vim="nvim"

if [[ $OSTYPE == $LINUX ]]; then
    alias ls='ls --color=auto'
    alias l='ls -hl --color=auto'
    alias ll='ls -Ahl --color=auto'
    alias open='xdg-open'
    alias gvim="nvim-gtk"

    # Create popup notification when command execution is completed.
    # Usage:
    #   ~$ command; alert
    alias alert='notify-send --urgency=low -i \
        "$([ $? = 0 ] && echo terminal || echo error)" \
        "$(history | tail -n1 | sed -e \
        '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"; printf "\a"'
elif [[ $OSTYPE == $MACOS ]]; then
    alias gvim="vimr"
    alias l='ls -hl'
    alias ll='ls -Ahl'
fi
