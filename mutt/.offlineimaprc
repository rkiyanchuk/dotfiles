[general]
ui = TTY.TTYUI
accounts = gmail
pythonfile = "~/.mutt/offlineimap.py"
fsync = False

[Account gmail]
localrepository = gmail-local
remoterepository = gmail-remote
status_backend = sqlite
postsynchook = notmuch new

[Account mirantis]
localrepository = mirantis-local
remoterepository = mirantis-remote
status_backend = sqlite
postsynchook = notmuch new

[Repository gmail-local]
type = Maildir
localfolders = ~/.mail/ruslan-kiianchuk
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'starred': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository gmail-remote]
maxconnections = 1
type = Gmail
remoteuser = ruslan.kiianchuk@gmail.com
remotepasseval = get_password('gmail')
realdelete = no
nametrans = lambda folder: {
                            '[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'starred',
                            '[Gmail]/Important': 'important',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                           }.get(folder, folder)
folderfilter = lambda folder: folder not in [
                                            '[Gmail]/Trash',
                                            '[Gmail]/Spam',
                                            ]

[Repository mirantis-local]
type = Maildir
localfolders = ~/.mail/mirantis
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'starred': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository mirantis-remote]
maxconnections = 1
type = Gmail
remoteuser = rkiyanchuk@mirantis.com
remotepasseval = get_password('mirantis')
realdelete = no
nametrans = lambda folder: {
                            '[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'starred',
                            '[Gmail]/Important': 'important',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                           }.get(folder, folder)
folderfilter = lambda folder: folder not in [
                                            '[Gmail]/Trash',
                                            '[Gmail]/Spam',
                                            ]
