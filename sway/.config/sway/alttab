#!/usr/bin/env python3

# TODO:
# fix navigation
# https://github.com/swaywm/sway/issues/5388
# Use i3ipc lib instead of shell command:
# https://i3ipc-python.readthedocs.io/en/latest/connection.html

import sys
import json
import subprocess


def getWorkspaceByName(name, nodes):
    lookup = {i["name"]: i for i in nodes}
    return lookup[name]

def getNextWindow():
    if focus < len(windows) - 1:
        return focus+1
    else:
        return 0

def getPrevWindow():
    if focus > 0:
        return focus-1
    else:
        return len(windows)-1

def makelist(temp):
    for nodes in "floating_nodes", "nodes":
        for i in range(len(temp[nodes])):
            if temp[nodes][i]["name"] is None:
               makelist(temp[nodes][i])
            else:
               windows.append(temp[nodes][i])

def focused(temp_win):
    for i in range(len(temp_win)):
        if temp_win[i]["focused"] == True:
           return i

if __name__ == "__main__":
    direction = sys.argv[1]
    if direction not in ["next", "prev"]:
        print("ERROR: Invalid direction arg")
        sys.exit(-1)


    swaymsg = subprocess.run(['swaymsg', '-t', 'get_tree'], stdout=subprocess.PIPE)
    data = json.loads(swaymsg.stdout)

    outputs = range(1, len(data["nodes"]) + 1)

    for cur_output in outputs:
        current = data["nodes"][cur_output]["current_workspace"]

        workspace = getWorkspaceByName(current, data["nodes"][cur_output]["nodes"])
        windows = list()

        makelist(workspace)
        focus = focused(windows)

        win_switch_func = getNextWindow if direction == "next" else getPrevWindow
        try:
            print(windows[win_switch_func()]["id"])
            break
        except TypeError:
            continue

